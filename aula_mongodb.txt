CRIANDO UM SERVIDOR DE CONFIGURAÇÕES MONGODB - DOCKER

docker network create mongoNet
--------------------------------------
docker run --name mongo-config1 --net mongoNet -d mongo mongod --configsvr --replSet serverConfig --port 27018

docker run --name mongo-config2 --net mongoNet -d mongo mongod --configsvr --replSet serverConfig --port 27018

docker run --name mongo-config3 --net mongoNet -d mongo mongod --configsvr --replSet serverConfig --port 27018
---------------------------------------
docker exec -it mongo-config1 mongosh --port 27018
--------------------------------------
rs.initiate({
            _id: "serverConfig", configsvr:true,
            members:[
                {_id:0, host: "mongo-config1:27018"},
                {_id:1, host: "mongo-config2:27018"},
                {_id:2, host: "mongo-config3:27018"}
                ]})
---------------------------------------
CRIANDO SHARDS

//1 fragmento

docker run --name mongo-shard1a --net mongoNet -d mongo mongod --shardsvr --replSet shard1 --port 27019
docker run --name mongo-shard1b --net mongoNet -d mongo mongod --shardsvr --replSet shard1 --port 27019
docker run --name mongo-shard1c --net mongoNet -d mongo mongod --shardsvr --replSet shard1 --port 27019
-----------------------
docker exec -it mongo-shard1a mongosh --port 27019
--------------------------------
docker exec -it mongo-shard1a mongosh --port 27019

rs.initiate({ 
        _id:"shard1", 
        members: [
                {id:0, host: "mongo-shardia:27019"},
                (id:1, host: "mongo-shard1b:27019"},
                {_id:2, host: "mongo-shardic:27019"}
]})
----------------------------------
//2 fragmento

docker run --name mongo-shard2a --net mongoNet -d mongo mongod --shardsvr --replSet shard2 --port 27020
docker run --name mongo-shard2b --net mongoNet -d mongo mongod --shardsvr --replSet shard2 --port 27020
docker run --name mongo-shard2c --net mongoNet -d mongo mongod --shardsvr --replSet shard2 --port 27020
-----------------------------------
docker exec -it mongo-shard2a mongosh --port 27020
---------------------------------
rs. initiate({ 
        _id: "shard2", 
        members: [
                {id:0, host: "mongo-shard2a:27020"},
                {id:1, host: "mongo-shard2b:27020"},
                (id:2, host: "mongo-shard2c:27020"}
]})
----------------------------------
ROTEADOR MONGOS

docker run -p 27021:27021 --name mongo-router --net mongoNet -d mongo mongos port 27021 --configdb serverConfig/mongo-config1:27018, mongo-config2:27018,mongo-config3:27018 --bind_ip_all
--------------------------------------
docker exec-it mongo-router mongosh-port 27021
----------------------------------------
sh.addShard("shard1/mongo-shard1a:27019") 
sh.addShard("shard1/mongo-shard1b:27019") 
sh.addShard("shard1/mongo-shardic:27019")
--------------------------------------
sh.addShard("shard2/mongo-shard2a:27020","shard2/mongo-shard2b:27020" "shard2/mongo-shard2c:27020")
-------------------------------------
sh.status()
